/**
 * Created by L on 03/05/2017.
 */
"use strict";
var doHash = require('./murmurhash2');

class BloomFilter {
  constructor(arraySize, hashTimes) {
    // TODO : use Buffer
    //noinspection JSUnresolvedVariable
    this.stack = new Array(arraySize || 50000);
    if (hashTimes) {
      let seeds = [];
      for (let i = 0; i < hashTimes; i++) {
        seeds.push(i * 10);
      }
      this.seeds = seeds;
    } else {
      this.seeds = [0, 10, 20, 30, 40];
    }
  }

  isInSet(url) {
    return this.seeds.every(seed=> this.stack[doHash(url, seed) % this.stack.length]);
  }

  add(url) {
    if (!this.isInSet(url)) {
      this.seeds.forEach(v=> {
        var index = doHash(url, v) % this.stack.length;
        this.stack[index] = 1;
      });
      return true;
    } else {
      return false;
    }
  }
}
module.exports = new BloomFilter();
